local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Soka Hub", "DarkTheme")

-- Services
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")

-- States
local FlightEnabled = false
local SpeedEnabled = false
local NoClipEnabled = false
local TargetSpeed = 16
local FlightSpeed = 50
local DashSpeed = 100
local DashCooldown = false
local RunESPUpdate = true
local NameESP = {}
local CustomHighlights = {}
local CustomESPColor = Color3.new(1, 0, 0)

-- Main Tab
local MainTab = Window:NewTab("Main")
local SpeedSection = MainTab:NewSection("Speed")
local FlightSection = MainTab:NewSection("Flight")
local DashSection = MainTab:NewSection("Dash")
local MiscSection = MainTab:NewSection("Misc")

-- Speed Toggle with Keybind
SpeedSection:NewKeybind("Speed Toggle", "Toggle speed with key", Enum.KeyCode.X, function()
    SpeedEnabled = not SpeedEnabled
    if SpeedEnabled then
        RunService.Heartbeat:Connect(function()
            if LocalPlayer.Character and SpeedEnabled then
                LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame + LocalPlayer.Character.Humanoid.MoveDirection * (TargetSpeed/50)
            end
        end)
    end
end)

-- Speed Slider
SpeedSection:NewSlider("Speed Value", "Adjust speed value", 500, 16, function(value)
    TargetSpeed = value
end)

-- Flight Toggle with Keybind
FlightSection:NewKeybind("Flight Toggle", "Toggle flight with key", Enum.KeyCode.F, function()
    FlightEnabled = not FlightEnabled
    if FlightEnabled then
        local char = LocalPlayer.Character
        if char then
            local humanoid = char:WaitForChild("Humanoid")
            local hrp = char:WaitForChild("HumanoidRootPart")
            
            RunService.RenderStepped:Connect(function()
                if FlightEnabled then
                    local newVel = Vector3.new(0,0,0)
                    if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                        newVel = newVel + (Camera.CFrame.LookVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                        newVel = newVel - (Camera.CFrame.LookVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                        newVel = newVel + (Camera.CFrame.RightVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                        newVel = newVel - (Camera.CFrame.RightVector * FlightSpeed)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                        newVel = newVel + Vector3.new(0, FlightSpeed, 0)
                    end
                    if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                        newVel = newVel - Vector3.new(0, FlightSpeed, 0)
                    end
                    hrp.Velocity = newVel
                end
            end)
        end
    end
end)

-- Flight Speed Slider
FlightSection:NewSlider("Flight Speed", "Adjust flight speed", 200, 1, function(value)
    FlightSpeed = value
end)

-- No Clip
MiscSection:NewKeybind("Toggle NoClip", "Phase through objects", Enum.KeyCode.V, function()
    NoClipEnabled = not NoClipEnabled
    
    RunService:BindToRenderStep("NoClip", 100, function()
        if NoClipEnabled and LocalPlayer.Character then
            for _, part in pairs(LocalPlayer.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
end)

-- No Fall Damage (Smooth Version)
local function SmoothNoFallDamage()
    if LocalPlayer.Character then
        local Humanoid = LocalPlayer.Character:WaitForChild("Humanoid")
        local HRP = LocalPlayer.Character:WaitForChild("HumanoidRootPart")
        
        -- Clean fall detection
        Humanoid.StateChanged:Connect(function(_, new)
            if new == Enum.HumanoidStateType.Landed then
                task.wait()
                Humanoid.Health = Humanoid.Health
            end
        end)
        
        -- Smooth velocity handling
        local lastHealth = Humanoid.Health
        Humanoid:GetPropertyChangedSignal("Health"):Connect(function()
            if Humanoid.Health < lastHealth then
                local velocity = HRP.Velocity
                if velocity.Y < -50 then
                    Humanoid.Health = lastHealth
                end
            end
            lastHealth = Humanoid.Health
        end)
    end
end

MiscSection:NewToggle("No Fall Damage", "Prevents fall damage smoothly", function(state)
    if state then
        SmoothNoFallDamage()
    end
end)

-- Dash Keybind
DashSection:NewKeybind("Dash", "Press to dash", Enum.KeyCode.Q, function()
    if not DashCooldown and LocalPlayer.Character then
        DashCooldown = true
        local HRP = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if HRP then
            local BV = Instance.new("BodyVelocity")
            BV.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
            BV.Velocity = Camera.CFrame.LookVector * DashSpeed
            BV.Parent = HRP
            game:GetService("Debris"):AddItem(BV, 0.2)
            task.wait(1)
            DashCooldown = false
        end
    end
end)

-- Dash Force Slider
DashSection:NewSlider("Dash Force", "Adjust dash force", 500, 50, function(value)
    DashSpeed = value
end)

-- Visual Tab
local VisualTab = Window:NewTab("Visual")
local ESPSection = VisualTab:NewSection("ESP")

-- Create Name ESP Function
local function CreateNameESP(player)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "NameESP"
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.AlwaysOnTop = true
    billboard.StudsOffset = Vector3.new(0, 2, 0)
    
    local name = Instance.new("TextLabel")
    name.Name = "PlayerName"
    name.BackgroundTransparency = 1
    name.Size = UDim2.new(1, 0, 0, 20)
    name.Font = Enum.Font.SourceSansBold
    name.TextColor3 = Color3.new(1, 1, 1)
    name.TextSize = 14
    name.Text = player.Name
    name.Parent = billboard
    
    return billboard
end

-- ESP Update Function
local function UpdateAllESP()
    while RunESPUpdate do
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                if player.Character and player.Character:FindFirstChild("Head") then
                    if NameESP[player] then
                        if not player.Character.Head:FindFirstChild("NameESP") then
                            local esp = CreateNameESP(player)
                            NameESP[player] = esp
                            esp.Parent = player.Character.Head
                        end
                    end
                    
                    if player.Character:FindFirstChild("Humanoid") then
                        local highlight = player.Character:FindFirstChild("ESP_Highlight")
                        if highlight then
                            local health = player.Character.Humanoid.Health
                            local maxHealth = player.Character.Humanoid.MaxHealth
                            local healthPercent = health/maxHealth
                            highlight.FillColor = Color3.new(1-healthPercent, healthPercent, 0)
                        end
                    end
                    
                    if CustomHighlights[player] then
                        if not player.Character:FindFirstChild("Highlight") then
                            local highlight = Instance.new("Highlight")
                            highlight.FillTransparency = 0.5
                            highlight.OutlineTransparency = 0
                            highlight.FillColor = CustomESPColor
                            highlight.OutlineColor = Color3.new(1, 1, 1)
                            highlight.Parent = player.Character
                            CustomHighlights[player] = highlight
                        end
                    end
                end
            end
        end
        task.wait(0.1)
    end
end

-- ESP Toggles
ESPSection:NewToggle("Name ESP", "Shows player names", function(state)
    if state then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local esp = CreateNameESP(player)
                NameESP[player] = esp
                esp.Parent = player.Character:WaitForChild("Head")
            end
        end
    else
        for _, esp in pairs(NameESP) do
            esp:Destroy()
        end
        NameESP = {}
    end
end)

ESPSection:NewToggle("Health ESP", "Shows health-based highlights", function(state)
    if state then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.Name = "ESP_Highlight"
                highlight.Parent = player.Character
            end
        end
    else
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Character then
                local highlight = player.Character:FindFirstChild("ESP_Highlight")
                if highlight then highlight:Destroy() end
            end
        end
    end
end)

ESPSection:NewColorPicker("ESP Color", "Pick custom ESP color", Color3.new(1, 0, 0), function(color)
    CustomESPColor = color
    for _, highlight in pairs(CustomHighlights) do
        highlight.FillColor = color
    end
end)

ESPSection:NewToggle("Custom ESP", "Shows custom color highlights", function(state)
    if state then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character then
                local highlight = Instance.new("Highlight")
                highlight.FillTransparency = 0.5
                highlight.OutlineTransparency = 0
                highlight.FillColor = CustomESPColor
                highlight.OutlineColor = Color3.new(1, 1, 1)
                highlight.Parent = player.Character
                CustomHighlights[player] = highlight
            end
        end
    else
        for _, highlight in pairs(CustomHighlights) do
            highlight:Destroy()
        end
        CustomHighlights = {}
    end
end)

ESPSection:NewToggle("Stop ESP Updates", "Stops all ESP updates", function(state)
    RunESPUpdate = not state
    if RunESPUpdate then
        task.spawn(UpdateAllESP)
    end
end)

-- Settings Tab
local SettingsTab = Window:NewTab("Settings")
local SettingsSection = SettingsTab:NewSection("GUI Settings")

SettingsSection:NewDropdown("Theme", "Change UI Theme", {
    "DarkTheme",
    "LightTheme", 
    "BloodTheme",
    "GrapeTheme",
    "Ocean",
    "Midnight",
    "Sentinel",
    "Synapse"
}, function(currentTheme)
    Library:ChangeTheme(currentTheme)
end)

SettingsSection:NewKeybind("Toggle GUI", "Shows/Hides the GUI", Enum.KeyCode.RightShift, function()
    Library:ToggleUI()
end)

-- Start ESP Update Loop
task.spawn(UpdateAllESP)

-- Player Handling
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if NameESP[player] then
            local esp = CreateNameESP(player)
            NameESP[player] = esp
            esp.Parent = character:WaitForChild("Head")
        end
    end)
end)

Players.PlayerRemoving:Connect(function(player)
    if NameESP[player] then
        NameESP[player]:Destroy()
        NameESP[player] = nil
    end
    if CustomHighlights[player] then
        CustomHighlights[player]:Destroy()
        CustomHighlights[player] = nil
    end
end)
